@page "/class-edit/{_classId}"
@inject SchoolsDbAccessLayer dbLayer
@inject NavigationManager navigationManager
@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using SchoolsProjectBlazorDapper.Data.Schools;
@using SchoolsProjectBlazorDapper.Components.Schools.Pages.Reusable;
@using MudBlazor;

@using Microsoft.AspNetCore.Authorization;

@attribute [Authorize(Roles = "Admin, Teacher")]

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@*Wait for everything to load*@
@if (SelectedClass == null)
{
    <p><em>Loading Class...</em></p>
}
else
{
    <SH_d_ClassesSimpleTable SelectedClass="SelectedClass" />
    <MudButton Class="mb-4 mt-1" Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(SelectedClass.Name == null)" @onclick="UpdateClass">Submit</MudButton>

    <div class="edit-add-container">
        <MudTextField @bind-Value="SelectedClass.Name" Label="Name" Variant="Variant.Text"></MudTextField>
    </div>
}

@code {
    [Parameter] public string? _classId { get; set; }

    public SH_d_Class SelectedClass = new();

    protected override async Task OnInitializedAsync()
    {
        SelectedClass.Id = int.Parse(_classId);
        SelectedClass = await dbLayer.SH_d_ClassesSelectById(SelectedClass);
    }

    private async Task UpdateClass()
    {
        await dbLayer.SH_d_ClassesUpdate(SelectedClass);
        navigationManager.NavigateTo("/classes");
    }
}
