@page "/schedule-add"
@inject SchoolsDbAccessLayer dbLayer
@inject NavigationManager navigationManager
@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using SchoolsProjectBlazorDapper.Data.Schools;
@using SchoolsProjectBlazorDapper.Components.Schools.Pages.Reusable;
@using MudBlazor;

@using Microsoft.AspNetCore.Authorization;

@attribute [Authorize(Roles = "Admin, Teacher")]

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@*Wait for everything to load*@
@if (SH_d_SubjectTable?.Count == 0)
{
    <p><em>Loading Person...</em></p>
}
else
{
    <SH_ScheduleSimpleTable SelectedSchedule="SelectedSchedule" />
    <MudButton Class="mb-4 mt-1" Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(SelectedSchedule.TimeStart == null || SelectedSchedule.TimeEnd == null || SelectedSchedule.TimeStart > SelectedSchedule.TimeEnd || SelectedSchedule.SH_d_Class?.Id == null || SelectedSchedule.SH_d_Subject?.Id == null || SelectedSchedule.SH_PersonTeacher?.Id == null)" @onclick="ScheduleInsert">Submit</MudButton>

    <div class="edit-add-container">
        <MudTimePicker Label="TimeStart" Editable="true" Placeholder="Start Time" @bind-Time="SelectedSchedule.TimeStart" />
        <MudTimePicker Label="TimeEnd" Editable="true" Placeholder="End Time" @bind-Time="SelectedSchedule.TimeEnd" />
        <SH_PersonsTable NameTable="Teachers" PersonsTable="SH_TeacherTable" @bind-SelectedPerson="@SelectedSchedule.SH_PersonTeacher" @bind-SelectedPerson:event="SelectedPersonChanged" />
        <SH_d_ClassesTable ClassTable="SH_d_ClassTable" @bind-SelectedClass="@SelectedSchedule.SH_d_Class" @bind-SelectedClass:event="SelectedClassChanged" />
        <SH_d_SubjectTable SubjectTable="SH_d_SubjectTable" @bind-SelectedSubject="@SelectedSchedule.SH_d_Subject" @bind-SelectedSubject:event="SelectedSubjectChanged" />
    </div>
}

@code {
    public SH_Schedule SelectedSchedule = new();

    // Person Table
    List<SH_Person>? SH_TeacherTable = new();

    // Class Table
    List<SH_d_Class>? SH_d_ClassTable = new();

    // Subject Table
    List<SH_d_Subject>? SH_d_SubjectTable = new();

    protected override async Task OnInitializedAsync()
    {
        // Initialize empty subtable
        SelectedSchedule.SH_d_Class = new();
        SelectedSchedule.SH_d_Subject = new();
        SelectedSchedule.SH_PersonTeacher = new();

        // Get persons for Teachers Table
        SH_Person teacherType = new SH_Person { TypeId = 2 };
        SH_TeacherTable = await dbLayer.SH_PersonsSelectAllByType(teacherType);

        // Get classes table
        SH_d_ClassTable = await dbLayer.SH_d_ClassesSelectAll();

        // Get subjects table
        SH_d_SubjectTable = await dbLayer.SH_d_SubjectsSelectAll();
    }

    private async Task ScheduleInsert()
    {
        // Update Ids
        SelectedSchedule.ClassId = SelectedSchedule.SH_d_Class?.Id;
        SelectedSchedule.TeacherId = SelectedSchedule.SH_PersonTeacher?.Id;
        SelectedSchedule.SubjectId = SelectedSchedule.SH_d_Subject?.Id;

        // Insert row in db
        await dbLayer.SH_SchedulesInsert(SelectedSchedule);

        // Get back to persons table
        navigationManager.NavigateTo("/schedule");
    }
}
