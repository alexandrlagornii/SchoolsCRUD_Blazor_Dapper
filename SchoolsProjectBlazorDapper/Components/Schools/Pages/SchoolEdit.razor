@page "/Schools/SchoolEdit/{schoolId}"
@inject SchoolsDbAccessLayer dbLayer
@inject NavigationManager NavigationManager

@using SchoolsProjectBlazorDapper.Data.Schools;
@using SchoolsProjectBlazorDapper.Components.Schools.Pages.Reusable;
@using MudBlazor;
@using Microsoft.AspNetCore.Authorization;

@attribute [Authorize(Roles = "Admin")]

<PageTitle>SchoolEdit</PageTitle>

@*Wait for everything to load*@
@if (!initialized)
{
    <p><em>Loading...</em></p>
}
else
{
    <SH_SchoolsSimpleTable SelectedSchool="SelectedSchool" />
    <MudButton Class="mb-4 mt-1" Variant="Variant.Outlined" Color="Color.Primary"
               Disabled="@(SelectedSchool.Name == string.Empty || SelectedSchool.SH_d_Country?.Id == 0
                         || SelectedSchool.SH_d_City?.Id == 0 || SelectedSchool.Address == string.Empty)"
               @onclick="UpdateSchool">Submit</MudButton>

    <div class="edit-add-container">
        <MudTextField @bind-Value="SelectedSchool.Name" Label="Name" Variant="Variant.Text"></MudTextField>
        <MudTextField @bind-Value="SelectedSchool.Address" Label="Address" Variant="Variant.Text"></MudTextField>
        <SH_d_CountryTable CountriesTable="SH_d_CountryTable" @bind-SelectedCountry="@SelectedSchool.SH_d_Country" @bind-SelectedCountry:event="SelectedCountryChanged" />
        <SH_d_CityTable CitiesTable="SH_d_CityTable" @bind-SelectedCity="@SelectedSchool.SH_d_City" @bind-SelectedCity:event="SelectedCityChanged" />
    </div>

}
@code {
    [Parameter] public string schoolId { get; set; } = string.Empty;
    public SH_School SelectedSchool = new();
    List<SH_d_Country> SH_d_CountryTable = new();
    List<SH_d_City> SH_d_CityTable = new();
    bool initialized = false;

    protected override async Task OnInitializedAsync()
    {
        // Try to parse
        int parsedId = 0;
        bool parsedIdSuccess = Int32.TryParse(schoolId, out parsedId);

        if (parsedIdSuccess == true)
        {
            // Assign parsed id
            SelectedSchool.Id = parsedId;

            // Get selected school
            SelectedSchool = await dbLayer.SH_SchoolsSelectById(SelectedSchool);

            // Get schools for Schools table
            SH_d_CountryTable = await dbLayer.SH_d_CountriesSelectAll();

            // Get type for Type table
            SH_d_CityTable = await dbLayer.SH_d_CitiesSelectAll();
        }

        // Set initialized flag
        initialized = true;
    }

    private async Task UpdateSchool()
    {
        // Change Ids
        SelectedSchool.CountryId = SelectedSchool.SH_d_Country?.Id ?? 0;
        SelectedSchool.CityId = SelectedSchool.SH_d_City?.Id ?? 0;

        // Update school
        await dbLayer.SH_SchoolsUpdate(SelectedSchool);

        // Redirect to main page
        NavigationManager.NavigateTo("/Schools/Schools");
    }
}
