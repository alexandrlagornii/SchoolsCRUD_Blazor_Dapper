@page "/person-add"
@inject SchoolsDbAccessLayer dbLayer
@inject NavigationManager navigationManager

@using SchoolsProjectBlazorDapper.Data.Schools;
@using SchoolsProjectBlazorDapper.Components.Schools.Pages.Reusable;
@using MudBlazor;
@using Microsoft.AspNetCore.Authorization;

@attribute [Authorize(Roles = "Admin")]

@*Wait for everything to load*@
@if (SH_d_TypeTable?.Count == 0)
{
    <p><em>Loading Person...</em></p>
}
else
{
    <SH_PersonSimpleTable SelectedPerson="SelectedPerson" />
    <MudButton Class="mb-4 mt-1" Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(SelectedPerson.FirstName == null || SelectedPerson.LastName == null || SelectedPerson.SH_School?.Id == null || SelectedPerson.SH_d_Type == null || SelectedPerson.DateOfBirth < new DateTime(1900, 1, 1) || SelectedPerson.DateOfBirth > DateTime.Today)" @onclick="PersonInsert">Submit</MudButton>

    <div class="edit-add-container">
        <MudTextField @bind-Value="SelectedPerson.FirstName" Label="FirstName" Variant="Variant.Text"></MudTextField>
        <MudTextField @bind-Value="SelectedPerson.LastName" Label="LastName" Variant="Variant.Text"></MudTextField>
        <MudDatePicker Label="Date of Birth" Editable="true" Placeholder="Select Date" @bind-Date="SelectedPerson.DateOfBirth" DateFormat="dd.MM.yyyy" />
        <SH_SchoolsTable SchoolsTable="SH_SchoolTable" @bind-SelectedSchool="@SelectedPerson.SH_School" @bind-SelectedSchool:event="SelectedSchoolChanged" />
        <SH_d_TypeTable TypeTable="SH_d_TypeTable" @bind-SelectedType="@SelectedPerson.SH_d_Type" @bind-SelectedType:event="SelectedTypeChanged" />
    </div>
}
@code {
    // Person Table
    public SH_Person? SelectedPerson = new();

    // School Table
    List<SH_School>? SH_SchoolTable = new();

    // Type Table
    List<SH_d_Type>? SH_d_TypeTable = new();

    protected override async Task OnInitializedAsync()
    {
        // Initialize empty subtable
        SelectedPerson.SH_School = new();
        SelectedPerson.SH_d_Type = new();

        // Get schools for Schools table
        SH_SchoolTable = (await dbLayer.SH_SchoolsSelectAll()).ToList();

        // Get type for Type table
        SH_d_TypeTable = await dbLayer.SH_d_TypesSelectAll();
    }

    private async Task PersonInsert()
    {
        // Update Ids
        SelectedPerson.SchoolId = SelectedPerson.SH_School?.Id;
        SelectedPerson.TypeId = SelectedPerson.SH_d_Type?.Id;

        // Insert row in db
        await dbLayer.SH_PersonsInsert(SelectedPerson);

        // Get back to persons table
        navigationManager.NavigateTo("/persons");
    }
}
