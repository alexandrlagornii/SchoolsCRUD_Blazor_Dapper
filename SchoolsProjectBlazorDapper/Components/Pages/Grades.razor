@page "/grades"
@inject Logic.SchoolsDbAccessLayer dbLayer
@inject NavigationManager NavigationManager
@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using SchoolsProjectBlazorDapper.Models;

<PageTitle>Grades</PageTitle>

<h5>Do you want to delete a certain grade?</h5>
<p>Enter desirable Id of the grade to delete it</p>

<input @bind="IdForRemoval" />
<button style="height:30px; width: 80" @onclick="DeleteGradeRefresh">Delete</button>


<h3 style="margin-top: 30px;">All Grades</h3>

@if (GradesWithNames.Count == 0)
{
    <p><em>Loading Grades...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Grade</th>
                <th>Student ID</th>
                <th>Student Full Name</th>
                <th>Teacher ID</th>
                <th>Teacher Full Name</th>
                <th>Subject Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var grade in GradesWithNames)
            {
                <tr>
                    <td>@grade.Id</td>
                    <td>@grade.Grade</td>
                    <td>@grade.StudentId</td>
                    <td>@grade.StudentName</td>
                    <td>@grade.TeacherId</td>
                    <td>@grade.TeacherName</td>
                    <td>@grade.SubjectName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<GradeWithNames> GradesWithNames = new();
    int IdForRemoval = 0;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        GradesWithNames = await dbLayer.GetGradesWithNames();
    }

    private async Task DeleteGradeRefresh()
    {
        await dbLayer.DeleteGrade(IdForRemoval);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
